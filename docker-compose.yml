version: '3.3'
services:
  order:
    build:
      context: ./order
    restart: always
    ports:
      - "10142:8080"
    volumes:
      - ./file-storage:/file-storage
      - ./log:/log
    env_file:
      - order/.env
    depends_on:
      - order_db
    networks:
      - frontend-network
      - backend-network

  order_db:
    image: postgres:14-alpine
    ports:
      - '15142:5432'
    restart: 'no'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret99
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - backend-network

  catalogue:
    build:
      context: ./catalogue
    restart: always
    ports:
      - "10141:8080"
    volumes:
      - ./file-storage:/file-storage
      - ./log:/log
    env_file:
      - catalogue/.env
    depends_on:
      - catalogue_db
    networks:
      - frontend-network
      - backend-network

  catalogue_db:
    image: postgres:14-alpine
    ports:
      - '15141:5432'
    restart: 'no'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret99
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - backend-network

  user:
    build:
      context: ./user
    restart: always
    ports:
      - "10140:8080"
    volumes:
      - ./file-storage:/file-storage
      - ./log:/log
    env_file:
      - user/.env
    depends_on:
      - user_db
    networks:
      - frontend-network
      - backend-network

  user_db:
    image: postgres:14-alpine
    ports:
      - '15140:5432'
    restart: 'no'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret99
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - backend-network

  frontend:
    build:
      context: ./frontend
    restart: always
    ports:
      - "10143:8080"
    volumes:
      - ./file-storage:/file-storage
      - ./log:/log
    networks:
      - frontend-network
      - backend-network

volumes:
  db:
    driver: local

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge
